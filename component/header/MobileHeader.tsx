"use client"; 

import { useState } from 'react';
import Link from 'next/link';
import {
  Menu,
  X,
  ShoppingBag,
  ChevronDown,
  Heart,
  Search,
  User,
} from 'lucide-react';
import styles from './MobileHeader.module.css'; 

const FloralLogoIcon = ({ size = 32, className = '' }) => (
  <svg
    width={size}
    height={size}
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    className={className}
  >
    <path 
      d="M0.86164 16.0839C0.143608 17.6875 0.0478717 19.0996 0.0478717 19.6501C0.0478717 19.7937 0.167544 19.8895 0.287216 19.8895C0.981313 19.8416 3.03967 19.6262 4.85869 18.5013C5.1459 18.3098 5.43311 18.1423 5.67246 17.9508C8.85573 15.6531 9.50196 12.1347 9.5977 11.2492C9.69343 11.1774 9.7413 11.1295 9.8131 11.0577H10.0285C10.1242 11.1295 10.1721 11.1774 10.2679 11.2731C10.3397 12.0629 10.7944 14.9111 13.4272 17.3046C13.499 17.3764 13.5947 17.3764 13.6905 17.3524C13.8102 17.3046 13.9298 17.2328 14.0734 17.137C14.217 17.0652 14.217 16.8737 14.0974 16.778C11.5124 14.5042 11.1534 11.321 11.1295 11.1773C15.6531 11.8236 17.4721 15.1265 17.4721 15.0787C17.8072 15.5573 17.8551 15.7249 17.9508 15.9164C17.9508 15.9164 18.6449 17.0652 18.9082 18.6927C18.9321 18.8364 18.8124 18.98 18.6449 18.956C17.9029 18.8363 17.2328 18.6209 16.7301 18.4295C16.6583 18.4055 16.5626 18.4055 16.5147 18.4534C16.3951 18.5491 16.2754 18.6449 16.1557 18.7167C16.0121 18.8124 16.0361 19.0518 16.2036 19.0996C17.0174 19.4586 18.238 19.8177 19.6501 19.8655C19.7938 19.8655 19.8895 19.7459 19.8895 19.6262C19.7698 16.9934 18.5013 15.0547 18.5013 15.0547C18.3577 14.7914 18.1662 14.5282 17.9508 14.241C17.9508 14.241 15.7249 10.8662 11.2731 10.2918C11.1534 10.2678 11.0816 10.1721 11.0816 10.0764C11.0816 9.9567 11.0816 9.86096 11.0816 9.78916C11.0816 9.71736 11.2013 9.66949 11.2492 9.64555C14.5042 9.1908 16.5387 7.37179 17.4242 6.36654C17.4961 6.29474 17.496 6.17507 17.4482 6.10327C17.3764 5.98359 17.3046 5.83999 17.2328 5.72031C17.161 5.57671 16.9695 5.57671 16.8498 5.69638C16.0121 6.72556 14.1931 8.35309 11.1295 8.78391C11.1534 8.61637 11.6082 4.739 15.0069 2.46524C15.318 2.27376 15.6052 2.08229 15.8685 1.93868C15.8685 1.93868 17.0652 1.24459 18.6449 1.00524C18.7885 0.981309 18.9321 1.12491 18.9082 1.26852C18.7885 2.05835 18.5492 2.72852 18.3577 3.23114C18.3338 3.30294 18.3338 3.39868 18.3816 3.44655C18.4774 3.56622 18.5731 3.70983 18.6449 3.8295C18.7406 3.97311 18.98 3.94917 19.0518 3.78163C19.7459 2.20196 19.8416 0.813767 19.8416 0.263276C19.8416 0.11967 19.7219 0.0239322 19.6023 0.0239322C18.9082 0.0718009 16.8498 0.287211 15.0308 1.41213C14.7197 1.6036 14.4085 1.79508 14.217 1.96262C11.0338 4.26032 10.3875 7.77867 10.2918 8.66424C10.1961 8.73604 10.1482 8.78392 10.0764 8.85572H9.86098C9.76524 8.78392 9.71737 8.73605 9.62163 8.64031C9.54983 7.85048 9.09507 5.02622 6.46229 2.60885C6.39048 2.53704 6.29475 2.53704 6.19901 2.58491C6.07934 2.65671 5.93574 2.72852 5.81606 2.80032C5.67246 2.87212 5.67246 3.0636 5.79213 3.15934C8.37704 5.4331 8.73606 8.61638 8.75999 8.75998C4.23639 8.13769 2.48918 4.88261 2.44131 4.83474C2.27377 4.57147 2.10623 4.30819 1.93869 3.99704C1.93869 3.99704 1.26852 2.87212 0.981312 1.22065C1.10098 1.10098 1.12492 1.07705 1.24459 0.957375C1.98656 1.07705 2.65672 1.29246 3.15934 1.48393C3.23115 1.50786 3.32688 1.50787 3.37475 1.43606C3.49442 1.34033 3.6141 1.24459 3.73377 1.17278C3.87737 1.07705 3.85344 0.837702 3.6859 0.765899C2.87213 0.406884 1.65147 0.0478688 0.239344 0C0.0957376 0 0 0.119672 0 0.239344C0.119672 2.87213 1.3882 4.81081 1.3882 4.81081C1.53181 5.07409 1.72328 5.31343 1.93869 5.62458C1.93869 5.62458 4.16459 8.99933 8.61638 9.57375C8.73606 9.59768 8.80786 9.69342 8.80786 9.78916C8.80786 9.8849 8.80786 9.98063 8.80786 10.0524C8.80786 10.1482 8.71212 10.22 8.66426 10.22C5.40918 10.6508 3.37475 12.4937 2.48918 13.499C2.44131 13.5708 2.41738 13.6426 2.44131 13.7383C2.48918 13.8819 2.58492 14.0255 2.65672 14.1691C2.72852 14.3128 2.92 14.3128 3.01574 14.1931C3.85344 13.1878 5.67245 11.5124 8.75999 11.0816C8.73606 11.2492 8.2813 15.1265 4.88262 17.4003C4.76294 17.496 4.61934 17.5678 4.49967 17.6636C4.35607 17.7593 2.8482 18.597 1.24459 18.8603C1.10099 18.8842 0.957377 18.7406 0.981312 18.597C1.10098 17.7832 1.34033 17.0891 1.55574 16.6105C1.57967 16.5387 1.57967 16.4429 1.5318 16.395C1.43606 16.2754 1.34033 16.1318 1.26853 16.0121C1.14886 15.8924 0.933443 15.9164 0.86164 16.0839ZM1.93869 15.8685C2.39344 16.4668 2.96787 17.0173 3.42262 17.4242C3.49443 17.496 3.61409 17.496 3.6859 17.4482C3.80557 17.3764 3.94918 17.3046 4.06885 17.2327C4.18852 17.1609 4.21246 16.9695 4.09278 16.8737C3.13541 16.06 2.46525 15.0547 2.46525 15.0547C2.29771 14.8154 2.13016 14.5282 1.96262 14.217C1.12492 12.5895 0.90951 11.1055 0.885576 10.1003C0.885576 9.66948 0.909507 9.2626 0.957376 8.90358C0.98131 8.83178 0.981312 8.78391 0.981312 8.78391C1.10098 7.87441 1.31639 7.13244 1.5318 6.60589C1.55573 6.53408 1.55574 6.43835 1.50787 6.39048C1.41213 6.29474 1.34033 6.15113 1.24459 6.03146C1.14885 5.88786 0.909507 5.91179 0.837704 6.07933C0.574426 6.74949 0.263278 7.659 0.119672 8.78391C0.119672 8.78391 -0.454754 11.8475 1.43606 15.0308C1.57967 15.3659 1.77115 15.6531 1.93869 15.8685ZM17.9269 4.02097C17.4721 3.42261 16.8977 2.87212 16.4429 2.46524C16.3711 2.39343 16.2754 2.39344 16.1797 2.44131C16.06 2.51311 15.9164 2.58491 15.7967 2.65671C15.677 2.72852 15.6531 2.91999 15.7728 3.01573C16.7301 3.8295 17.4003 4.83474 17.4003 4.83474C17.5679 5.05015 17.7354 5.33737 17.9029 5.67245C18.7406 7.29998 18.956 8.78391 18.98 9.78916C18.98 10.22 18.956 10.6269 18.9082 10.9859C18.8842 11.0577 18.8842 11.1055 18.8842 11.1055C18.7646 12.039 18.5492 12.781 18.3338 13.3075C18.3098 13.3793 18.3098 13.4751 18.3816 13.5469C18.4774 13.6665 18.5731 13.7862 18.6449 13.9059C18.7406 14.0495 18.98 14.0255 19.0518 13.858C19.3151 13.1878 19.6262 12.2544 19.7698 11.1295C19.7698 11.1295 20.3442 8.06588 18.4534 4.88261C18.3098 4.57146 18.1183 4.28425 17.9269 4.02097ZM5.62458 1.98655C5.72032 1.93868 5.86393 1.84295 5.95966 1.79508C9.21474 0.263278 12.039 1.00524 13.3793 1.55573C13.4511 1.57967 13.5469 1.57967 13.5947 1.5318C13.7144 1.43606 13.8341 1.34032 13.9777 1.24459C14.1213 1.14885 14.0974 0.909506 13.9298 0.837703C12.0151 0 10.0285 0 9.90884 0C9.76523 0 7.08458 -2.96733e-06 4.81082 1.38819C4.54754 1.55573 4.30819 1.72328 4.04491 1.91475C4.04491 1.91475 3.27902 2.48918 2.56098 3.23114C2.48918 3.30294 2.48918 3.39868 2.53705 3.49442C2.60885 3.63802 2.68065 3.78163 2.75246 3.9013C2.82426 4.04491 3.01573 4.04491 3.11147 3.94917C3.54229 3.47048 4.14065 2.89606 4.83475 2.44131C5.09803 2.27377 5.36131 2.13016 5.62458 1.98655ZM15.7967 17.9747C15.7967 17.9747 16.5387 17.4003 17.2806 16.6583C17.3524 16.5865 17.3524 16.4908 17.3285 16.395C17.2567 16.2514 17.1849 16.1318 17.1131 15.9882C17.0413 15.8446 16.8498 15.8446 16.7541 15.9642C16.3472 16.419 15.8924 16.8977 15.2223 17.3524C15.0069 17.52 14.6 17.7832 14.241 17.9747C10.8423 19.7219 7.89836 18.9321 6.51016 18.3816C6.43836 18.3577 6.34262 18.3577 6.29475 18.4055C6.17508 18.5013 6.03147 18.597 5.9118 18.6688C5.76819 18.7646 5.79212 19.0039 5.95966 19.0757C7.87442 19.9134 9.86098 19.9134 9.98065 19.9134C10.1243 19.9134 12.8049 19.9134 15.0787 18.5252C15.2941 18.3337 15.5574 18.1662 15.7967 17.9747ZM9.93278 9.71736C10.0285 9.8131 10.0764 9.86096 10.1721 9.9567C10.0764 10.0524 10.0285 10.1003 9.93278 10.1721C9.8131 10.1721 9.69343 10.0764 9.69343 9.93277C9.78917 9.86096 9.83704 9.8131 9.93278 9.71736Z" 
      fill="currentColor"
    />
  </svg>
);

type NavLink = {
  name: string;
  href: string;
};

type MobileActionIcon = {
  name: string;
  href: string;
  icon: React.ReactNode;
};

type MobileHeaderProps = {
  navLinks: NavLink[];
  mobileActionIcons: MobileActionIcon[];
};

const MobileHeader = ({ navLinks, mobileActionIcons }: MobileHeaderProps) => {
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  return (
    <>
      <div className={styles.mobileNav}>
        <div className={styles.mobileNavLeft}>
            <button
                onClick={() => setIsMenuOpen(!isMenuOpen)}
                aria-label="Toggle menu"
                className={styles.hamburgerButton}
            >
                {isMenuOpen ? <X size={28} /> : <Menu size={28} />}
            </button>
            
            <Link href="/" className={styles.mobileIconLogo}>
                <FloralLogoIcon size={32} />
            </Link>
        </div>

        <Link href="/" className={styles.mobileLogoText}>
          LOGO
        </Link>

        <div className={styles.mobileNavRight}>
            <Link href="/search" className={styles.mobileActionButton} aria-label="Search">
                <Search size={24} strokeWidth={1.5} />
            </Link>

            <Link href="/wishlist" className={styles.mobileActionButton} aria-label="Wishlist">
                <Heart size={24} strokeWidth={1.5} />
            </Link>

            <Link href="/cart" className={styles.mobileActionButton} aria-label="Cart">
                <ShoppingBag size={24} strokeWidth={1.5} />
            </Link>
        </div>
      </div>

      {isMenuOpen && (
        <div className={styles.flyoutMenu}>
          <nav className={styles.flyoutNav}>
            {navLinks.map((link) => (
              <Link
                key={link.name}
                href={link.href}
                className={styles.flyoutNavLink}
                onClick={() => setIsMenuOpen(false)}
              >
                {link.name}
              </Link>
            ))}
            
            <hr className={styles.flyoutHr} />
            
            {mobileActionIcons.map((item) => (
              <Link
                key={item.name}
                href={item.href}
                className={styles.flyoutActionLink}
                onClick={() => setIsMenuOpen(false)}
              >
                {item.icon}
                <span>{item.name}</span>
              </Link>
            ))}

            <button className={styles.flyoutLangButton}>
              <span>ENG</span>
              <ChevronDown size={20} strokeWidth={1.5} />
            </button>
          </nav>
        </div>
      )}
    </>
  );
};

export default MobileHeader;